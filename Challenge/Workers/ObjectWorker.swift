//
//  ObjectListWorker.swift
//  challenge
//
//  Created by Michael Steudter on 12.07.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

// swiftlint:disable identifier_name
class ObjectWorker {

	var objectsStore: ObjectsStoreProtocol

	init(objectsStore: ObjectsStoreProtocol) {
		self.objectsStore = objectsStore
	}

	func fetchObjects() async -> [Object] {
		var retVal: [Object] = []
		do {
			retVal = try await objectsStore.fetchObjects()
		} catch {
			print("error fetching \(error)")
		}
		return retVal
	}

	func fetchObject(id: String) async -> Object? {
		await objectsStore.fetchObject(id: id)
	}

	func createObject(object: Object) async {
		await objectsStore.createObject(objectToCreate: object)
	}

	func updateObject(object: Object) async {
		await objectsStore.updateObject(updatedObject: object)
	}

	func deleteObject(id: String) async {
		await objectsStore.deleteObject(id: id)
	}
}
