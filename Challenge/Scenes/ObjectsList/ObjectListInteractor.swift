//
//  ObjectListInteractor.swift
//  challenge
//
//  Created by Michael Steudter on 12.07.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ObjectListBusinessLogic {
	func listObjects(request: ListObjects.FetchObjects.Request) async
	func deleteObject(request: ListObjects.DeleteObject.Request) async
	func listObjectSelector() async
	func addObjectRelation(request: ListObjects.RelationSelector.Request) async
	var selectedObjectId: String? { get set }
	func fetchObject(request: CreateAndEditObject.FetchObject.Request) async -> Object?
}

class ObjectListInteractor: ObjectListBusinessLogic {
	var presenter: ObjectListPresentationLogic?
	var worker = ObjectWorker(objectsStore: LocalStore())
	var selectedObjectId: String?

	func listObjects(request: ListObjects.FetchObjects.Request) async {
		let objects = await worker.fetchObjects()
		presenter?.presentObjectList(response: ListObjects.FetchObjects.Response(objects: objects ))
	}

	func listObjectSelector() async {
		let objects = await worker.fetchObjects()
		presenter?.presentObjectRelationList(response: .init(objects: objects))
	}

	func addObjectRelation(request: ListObjects.RelationSelector.Request) async {
		if let object = request.object {
			await worker.updateObject(object: object)
		}
	}

	func deleteObject(request: ListObjects.DeleteObject.Request) async {
		await worker.deleteObject(id: request.id)
	}

	func fetchObject(request: CreateAndEditObject.FetchObject.Request) async -> Object? {
		await worker.fetchObject(id: request.id)
	}
}
