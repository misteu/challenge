//
//  ObjectListPresenter.swift
//  challenge
//
//  Created by Michael Steudter on 12.07.22.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ObjectListPresentationLogic {
	func presentObjectList(response: ListObjects.FetchObjects.Response)
	func presentObjectRelationList(response: ListObjects.RelationSelector.Response)
}

class ObjectListPresenter: ObjectListPresentationLogic {
	weak var viewController: ObjectListDisplayLogic?

	// MARK: Presentation

	func presentObjectList(response: ListObjects.FetchObjects.Response) {
		let displayedObjects = response.objects.map {
			ListObjects.DisplayedObject(
				type: $0.type,
				name: $0.name,
				description: $0.description,
				id: $0.id
			)
		}
		let viewModel = ListObjects.FetchObjects.ViewModel(displayedObjects: displayedObjects)
		viewController?.displayFetchedObjects(viewModel: viewModel)
	}

	func presentObjectRelationList(response: ListObjects.RelationSelector.Response) {
		let displayedObjects = response.objects.map {
			ListObjects.DisplayedObject(
				type: $0.type,
				name: $0.name,
				description: $0.description,
				id: $0.id
			)
		}
		let viewModel = ListObjects.RelationSelector.ViewModel(displayedObjects: displayedObjects)
		viewController?.displayObjectRelationSelector(viewModel: viewModel)
	}
}
